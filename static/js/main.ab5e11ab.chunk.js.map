{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","i","counting","useState","text","setText","count","setCount","style","color","heading","value","onChange","event","arr","target","split","length","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","join","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","Setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ab5e11ab.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>  */}\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a> \r\n\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/About\">About</Link> */}\r\n        </li>\r\n       \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes =\r\n{\r\n    title: PropTypes.string\r\n\r\n}\r\n","import React , {useState} from 'react'\r\n\r\nexport default function TextForm(props)\r\n {\r\n  let counting=0;\r\n  let i;\r\n\r\n    // let name = \"I love  you\";\r\n    // let arrName = name.split(\" \");\r\n    // console.log(arrName); // [\"I\", \"Love\", \" \", \"youu\"]\r\n     const handleUpClick =()=>\r\n     {\r\n        //  console.log(\"uppercase is clicked\" );\r\n         let newText = text.toUpperCase();\r\n         setText(newText);\r\n         props.showAlert(\"Converted to uppercase\",\"success\");\r\n         \r\n     }\r\n\r\n     const handleLoClick =()=>\r\n     {\r\n        //  console.log(\"uppercase is clicked\" );\r\n         let newText = text.toLowerCase();\r\n         setText(newText);\r\n         props.showAlert(\"Converted to lowercase\",\"success\");\r\n     }\r\n\r\n     \r\n     const handleClearAllClick =()=>\r\n     {\r\n        //  console.log(\"uppercase is clicked\" );\r\n         let newText = ' ';\r\n         setText(newText);\r\n         props.showAlert(\"Cleared!!\",\"success\");\r\n     }\r\n\r\n     const handleCopy =()=>\r\n     {\r\n       var text=document.getElementById(\"myBox\");\r\n       text.select();\r\n       navigator.clipboard.writeText(text.value);\r\n       props.showAlert(\"Copied to clipboard\",\"success\");\r\n\r\n     }\r\n\r\n     const handleRemove_extra =()=>\r\n     {\r\n       let newText = text.split(/[ ]+/);\r\n       setText(newText.join(\" \"));\r\n       props.showAlert(\"Extra spaces removed\",\"success\");\r\n     }\r\n     \r\n     \r\n     const handleOnChange =(event)=>\r\n     {\r\n     \r\n      //let count=0;\r\n\r\n       // console.log(\"on change\");\r\n         let arr= event.target.value.split(\" \");\r\n        \r\n         for(i=0;i<arr.length-1;i++)\r\n         {\r\n         //  console.log(\"for loop\");\r\n           if(arr[i]!=='')\r\n           {\r\n            counting++;\r\n            // console.log(\"count called \" + counting);\r\n             \r\n           }\r\n         }\r\n       \r\n         setText(event.target.value);\r\n      setCount(counting);\r\n\r\n     }\r\n\r\n    \r\n    //  using state \r\n     const [text , setText] =useState(' ');\r\n     const [count , setCount] =useState(0);\r\n\r\n     \r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n  {/* <label for=\"myBox\" class=\"form-label\">Example textarea</label> */}\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white' , color :props.mode==='dark'?'white':'black' }} id=\"myBox\" rows=\"8\" ></textarea>\r\n</div>\r\n\r\n  <button className=\"btn btn-primary mx-3\" onClick={handleUpClick}>Convert to uppercase</button>\r\n  <button className=\"btn btn-primary mx-3\" onClick={handleLoClick}>Convert to lowercase</button>\r\n  <button className=\"btn btn-primary mx-3\" onClick={handleClearAllClick}>Clear all</button>\r\n  <button className=\"btn btn-primary mx-3\" onClick={handleCopy}>Copy Text</button>\r\n  <button className=\"btn btn-primary mx-3\" onClick={handleRemove_extra}>Remove extra spaces</button>\r\n  \r\n      \r\n    </div>\r\n\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n      <h1>Your Text Summary</h1>\r\n\r\n      <p>{count} words {text.length} letters</p>\r\n      <p>{0.008*text.split(\" \").length} Minutes to read the above text</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in the above textbox\"}</p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n\r\n    \r\n\r\n    \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  const capitalize =(word)=>\r\n  {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n     <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n  \r\n  </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\n//import React, { Component } from 'react';\nimport { useState } from 'react/cjs/react.development';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//  // Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const[alert,Setalert] = useState(null); \n\n  const showAlert = (message,type)=>\n  {\n    Setalert({\n\n      msg: message,\n      type: type\n      \n    })\n\n    setTimeout(() =>\n\n    {\n      Setalert(null);\n\n    },1500);\n  \n  }\n\n   const toggleMode = ()=>\n   {\n     if(mode === 'light')\n     {\n       setMode('dark');\n       document.body.style.backgroundColor='grey';\n       showAlert(\"Dark mode has been enabled\",\"success\");\n       document.title=' TextUtils - Dark Mode';\n     }\n    else\n     {\n       setMode('light');\n       document.body.style.backgroundColor='white';\n       showAlert(\"Light mode has been enabled\",\"success\");\n       document.title=' TextUtils - Light Mode';\n     }\n   }\n\n  return (\n\n    <>\n    {/* <Router> */}\n   <Navbar title = \"TEXTUTILS\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert ={alert}/>\n       <div className=\"container my 3\">\n\n       {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert}  heading =\" Enter the text to analyse below\" mode={mode} />\n           \n          {/* </Route>\n        </Switch> */}\n      \n  \n \n   </div>\n   {/* </Router> */}\n\n   \n  \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}